{"version":3,"sources":["static/CDS.png","static/logo.png","static/doge.jpg","static/energy.png","static/oh-online.png","static/tanks.png","static/MCM.png","static/MCM.pdf","static/CMCM.png","static/CMCM.pdf","static/canada.png","projects.js","App.js","serviceWorker.js","index.js","styling.module.css"],"names":["module","exports","Project","props","post","React","useState","open","setOpen","Grid","item","className","style","root","Card","posts","elevation","CardActionArea","onClick","CardMedia","preview","image","title","Dialog","onClose","aria-labelledby","dialog","src","Divider","Typography","description","Button","button","variant","size","target","disable","href","link","CardContent","gutterBottom","component","color","summary","projects","energy","oh","tanks","mcm","mcmpaper","cmcm","cmcmpaper","canada","cds","App","Fragment","scroll","AppBar","toolbar","position","Toolbar","IconButton","fontSize","logo","alt","container","feature","xs","square","intro","whitetext","doge","cover","justify","spacing","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.230882c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CDS.94f24f59.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.179efddd.png\";","module.exports = __webpack_public_path__ + \"static/media/doge.de71323f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.c039e329.png\";","module.exports = __webpack_public_path__ + \"static/media/oh-online.4befbdb2.png\";","module.exports = __webpack_public_path__ + \"static/media/tanks.d2712411.png\";","module.exports = __webpack_public_path__ + \"static/media/MCM.6e4d1ae0.png\";","module.exports = __webpack_public_path__ + \"static/media/MCM.f6c00a2f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/CMCM.efe9a613.png\";","module.exports = __webpack_public_path__ + \"static/media/CMCM.57e16903.pdf\";","module.exports = __webpack_public_path__ + \"static/media/canada.d84d7c9a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography, Dialog, IconButton, Button, Divider, DialogContent,\n  Card, CardContent, CardActions, CardMedia, CardActionArea, Grid\n} from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\nimport style from './styling.module.css';\n\n\nexport default function Project(props) {\n  const { post } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <Grid item className={style.root} >\n      <Card className={style.posts} elevation={5}>\n        <CardActionArea onClick={handleClickOpen}>\n          <CardMedia\n            className={style.preview}\n            image={post.image}\n            title={post.title} />\n        </CardActionArea>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <div>\n            <img className={style.dialog} src={post.image} />\n            <Divider />\n            <Typography>{post.description}</Typography>\n            <Button className={style.button} variant=\"outlined\" size=\"small\" target=\"_blank\" disable elevation href={post.link}>\n              Click to view Source Material\n          </Button>\n          </div>\n        </Dialog>\n        <Divider />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.summary}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nProject.propTypes = {\n  post: PropTypes.object,\n};","import React from 'react';\nimport { Typography, Toolbar, AppBar, CardMedia, IconButton, Card, CardContent, Grid } from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Project from './projects.js';\nimport style from './styling.module.css';\nimport logo from './static/logo.png';\nimport doge from './static/doge.jpg';\nimport energy from './static/energy.png';\nimport oh from './static/oh-online.png';\nimport tanks from './static/tanks.png';\nimport mcm from './static/MCM.png';\nimport mcmpaper from './static/MCM.pdf';\nimport cmcm from './static/CMCM.png';\nimport cmcmpaper from './static/CMCM.pdf';\nimport canada from './static/canada.png';\nimport cds from './static/CDS.png'\nconst projects = [\n  {\n    title: 'Energy Usage Over The Years',\n    summary: 'Submission for a competition/project for my ENGRD 2720 Data Science For Engineers class',\n    image: energy,\n    description: 'This was a submission for a class competition where I won for having the best visualization as selected by Professor Wagner of the ECE Department (thanks). I chose a radially stacked bar chart in order to show the change of each sector\\'s energy usage over time relative to others as well.',\n    link: \"https://github.com/JSun14/Energy-Visualization\",\n\n  },\n  {\n    title: 'Automated Queueing for Online Office Hours',\n    summary: 'Online office hours web app project for Cornell Students (responsible for the front-end)',\n    image: oh,\n    description: 'While on spring break during quarantine awaiting for school to start, Magd (a lead on CDS) asked if anyone wanted to help build an online-office hours web app with him for when school resumes. I joined and was in charge of the front-end for the project, using React to create it. The app was never deployed officially once school started as we all became too busy to finish it. ',\n    link: \"https://github.com/bayoumi17m/oh-online\",\n  },\n  {\n    title: 'OCaml My Tanks',\n    summary: 'OCaml tanks game inspired from Wii-Play Tanks for CS 3110 Final Project',\n    image: tanks,\n    description: 'Shoutout to my teammates Shihao Cao and Kaitlyn Chen for building this with me (using only OCaml). This game, modelled off Wii-Play Tanks, is a single player game where the player attempts to shoot other tanks before one\\'s own tank is shot by enemy tanks. I was in charge of primarily making all of the physics interactions from scratch such as tank and projectile motion, interactions with walls/ditches/enemy and player tanks, as well as helping out in miscellaneous facets with the setup of the game/world states.',\n    link: \"https://github.com/JSun14/final3110\",\n  },\n  {\n    title: 'MCM',\n    summary: 'Paper submitted for the Mathematical Competition in Modeling',\n    image: mcm,\n    description: 'Shoutout to my teammates Kevin Zhou and Peter Wu. This paper\\'s problem statement was to model plastic waste and what actions could be taken to reduce its impact on the globe. The first part of our analysis consisted of determining the maximum amount of plastic waste that countries across the globe could properly handle and dispose of safely. The second section begins a thorough policy investigation into viable policies to reduce plastic waste generation. The final section dives into the implications of such policies and their disparities in impact for different countries across the globe.',\n    link: mcmpaper,\n  },\n  {\n    title: 'CMCM',\n    summary: 'Our paper, one of the Runner-up papers, in Cornell\\'s Mathematical Competition in Modeling',\n    image: cmcm,\n    description: 'Shoutout to my teammates Kevin Zhou and Peter Wu. This paper\\'s problem statement was to investigate the sidewalks of Ithaca. This involved first determining a model to prioritize which sidewalks to repair and then determining the cheapest procedure from which to repair the sidewalks. Lastly we projected the budget increases and expenditures over the next several decades and provide solutions for how to manage these increases.',\n    link: cmcmpaper,\n  },\n  {\n    title: 'Canadian Politics Visualization',\n    summary: 'Final Project submitted for Info 1998: Intro to Machine Learning',\n    image: canada,\n    description: 'Shoutout to my partner Kevin Zhou. For this project we decided to investigate Canadian elections and which factors play a subconscious role in influencing candidates\\'s elections. I was in charge of one visualization (Canada Heatmap) and one machine learning model (perceptron).',\n    link: \"https://github.com/JSun14/Canadian-Politics-\",\n  },\n  {\n    title: 'Repository for Data Science Tutorials',\n    summary: 'Part of our outreach program for Cornell Data Science where we make tutorials for Data Science Beginners',\n    image: cds,\n    description: 'This was one of the projects the education subteam for CDS tackled for Spring 2020. The plan is to upload more tutorials as we go on, but so far the only tutorial up is the one on Network Analysis. This was done by Tanmay Bansal (our team lead), Raye Liu, and Me (I took the unofficial role of leading this subproject). ',\n    link: \"https://cornelldatascience.github.io/Education-Immersive-Tutorials/networkAnalysis.html\",\n  },\n  {\n    title: 'INFO 1998',\n    summary: 'Introduction to Machine Learning taught by Cornell Data Science (offered in the spring and fall, check it out!)',\n    image: cds,\n    description: 'This is one of our founding purposes as the Education subteam for CDS. We host this class every semester in the hopes of just introducing machine learning topics and data science to anyone who wants to take a low commitment class just to get their feet wet. We review and edit slides/curriculum and hold office hours with worrkshops interspersed throughout the semester. ',\n    link: \"https://cornelldatascience.github.io/info1998/\",\n  },\n\n]\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className={style.scroll}>\n        <AppBar className={style.toolbar} position='relative'>\n          <Toolbar className={style.toolbar}>\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/JSun14\">\n              <GitHubIcon fontSize=\"large\" />\n            </IconButton>\n            <img src={logo} className={style.logo} alt=\"Logo\" />\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://www.linkedin.com/in/jerry-sun-50b660182/\">\n              <LinkedInIcon fontSize=\"large\" />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <main>\n          <Grid container className={style.feature}>\n            <Grid item xs={6} >\n              <Card elevation={0} square={true} >\n                <CardContent className={style.intro}>\n                  <Typography variant=\"h5\" className={style.whitetext}>\n                    <b>Hi I'm Jerry. Welcome to my website. It's currently under development.</b>\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={6}>\n              <img src={doge} className={style.cover} />\n            </Grid>\n          </Grid>\n          <Grid className={style.root} justify=\"space-between\" container spacing={8}>\n            {projects.map((post) => (\n              <Project post={post} />\n            ))}\n          </Grid>\n        </main>\n      </div>\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"styling_toolbar__XBNEZ\",\"intro\":\"styling_intro__3AWCx\",\"logo\":\"styling_logo__1mTmS\",\"cover\":\"styling_cover__3LVzX\",\"whitetext\":\"styling_whitetext__GO5Zx\",\"posts\":\"styling_posts__1s99h\",\"dialog\":\"styling_dialog__5XECv\",\"scroll\":\"styling_scroll__1eW4N\",\"root\":\"styling_root__24Hck\",\"preview\":\"styling_preview__2B4qa\",\"button\":\"styling_button__xRAc0\"};"],"sourceRoot":""}