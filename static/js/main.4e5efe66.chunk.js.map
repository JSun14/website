{"version":3,"sources":["styling.module.css","static/CDS.png","static/logo.png","static/doge.jpg","static/energy.png","static/oh-online.png","static/tanks.png","static/MCM.png","static/MCM.pdf","static/CMCM.png","static/CMCM.pdf","static/canada.png","projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Project","props","post","React","useState","open","setOpen","Grid","item","xs","className","style","root","Card","posts","CardActionArea","onClick","CardMedia","preview","image","title","Dialog","onClose","aria-labelledby","src","Typography","description","CardContent","gutterBottom","variant","component","color","summary","projects","energy","link","oh","tanks","mcm","mcmpaper","cmcm","cmcmpaper","canada","cds","App","Fragment","AppBar","toolbar","position","Toolbar","IconButton","target","href","fontSize","logo","alt","container","elevation","square","intro","whitetext","explanations","doge","cover","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e5efe66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"styling_toolbar__XBNEZ\",\"intro\":\"styling_intro__3AWCx\",\"logo\":\"styling_logo__1mTmS\",\"cover\":\"styling_cover__3LVzX\",\"explanations\":\"styling_explanations__3ijU-\",\"whitetext\":\"styling_whitetext__GO5Zx\",\"posts\":\"styling_posts__1s99h\",\"root\":\"styling_root__24Hck\",\"preview\":\"styling_preview__2B4qa\"};","module.exports = __webpack_public_path__ + \"static/media/CDS.94f24f59.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.179efddd.png\";","module.exports = __webpack_public_path__ + \"static/media/doge.de71323f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.c039e329.png\";","module.exports = __webpack_public_path__ + \"static/media/oh-online.4befbdb2.png\";","module.exports = __webpack_public_path__ + \"static/media/tanks.d2712411.png\";","module.exports = __webpack_public_path__ + \"static/media/MCM.6e4d1ae0.png\";","module.exports = __webpack_public_path__ + \"static/media/MCM.f6c00a2f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/CMCM.efe9a613.png\";","module.exports = __webpack_public_path__ + \"static/media/CMCM.57e16903.pdf\";","module.exports = __webpack_public_path__ + \"static/media/canada.d84d7c9a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography, Dialog, IconButton, Button,\n  Card, CardContent, CardActions, CardMedia, CardActionArea, Grid\n} from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\nimport style from './styling.module.css';\n\n\nexport default function Project(props) {\n  const { post } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <Grid item xs={4} className={style.root}>\n      <Card className={style.posts}>\n        <CardActionArea onClick={handleClickOpen}>\n          <CardMedia\n            className={style.preview}\n            image={post.image}\n            title={post.title} />\n        </CardActionArea>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <img src={post.image} />\n          <Typography>{post.description}</Typography>\n        </Dialog>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.summary}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nProject.propTypes = {\n  post: PropTypes.object,\n};","import React from 'react';\nimport { Typography, Toolbar, AppBar, CardMedia, IconButton, Card, CardContent, Grid } from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Project from './projects.js';\nimport style from './styling.module.css';\nimport logo from './static/logo.png';\nimport doge from './static/doge.jpg';\nimport energy from './static/energy.png';\nimport oh from './static/oh-online.png';\nimport tanks from './static/tanks.png';\nimport mcm from './static/MCM.png';\nimport mcmpaper from './static/MCM.pdf';\nimport cmcm from './static/CMCM.png';\nimport cmcmpaper from './static/CMCM.pdf';\nimport canada from './static/canada.png';\nimport cds from './static/CDS.png'\nconst projects = [\n  {\n    title: 'Energy Usage Over The Years',\n    summary: 'Submission for a competition/project for my ENGRD 2720 Data Science For Engineers class',\n    image: energy,\n    description: 'longer description',\n    link: \"https://github.com/JSun14/Energy-Visualization\",\n\n  },\n  {\n    title: 'Automated Queueing for Online Office Hours',\n    summary: 'Online office hours web app project for Cornell Students (responsible for the front-end)',\n    image: oh,\n    description: 'longer description',\n    link: \"https://github.com/bayoumi17m/oh-online\",\n  },\n  {\n    title: 'OCaml My Tanks',\n    summary: 'OCaml tanks game inspired from Wii-Play Tanks for CS 3110 Final Project',\n    image: tanks,\n    description: 'longer description',\n    link: \"https://github.com/JSun14/final3110\",\n  },\n  {\n    title: 'MCM',\n    summary: 'Paper submitted for the Mathematical Competition in Modeling',\n    image: mcm,\n    description: 'longer description',\n    link: mcmpaper,\n  },\n  {\n    title: 'CMCM',\n    summary: 'Our paper, one of the Runner-up papers, in Cornell\\'s Mathematical Competition in Modeling',\n    image: cmcm,\n    description: 'longer description',\n    link: cmcmpaper,\n  },\n  {\n    title: 'Canadian Politics Visualization',\n    summary: 'Final Project submitted for Info 1998: Intro to Machine Learning',\n    image: canada,\n    description: 'longer description',\n    link: \"https://github.com/JSun14/Canadian-Politics-\",\n  },\n  {\n    title: 'Repository for Data Science Tutorials',\n    summary: 'Part of our outreach program for Cornell Data Science where we make tutorials for Data Science Beginners',\n    image: cds,\n    description: 'longer description',\n    link: \"https://cornelldatascience.github.io/Education-Immersive-Tutorials/networkAnalysis.html\",\n  },\n  {\n    title: 'INFO 1998',\n    summary: 'Introduction to Machine Learning taught by Cornell Data Science (offered in the spring and fall, check it out!)',\n    image: cds,\n    description: 'longer description',\n    link: \"https://cornelldatascience.github.io/info1998/\",\n  },\n\n]\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div>\n        <AppBar className={style.toolbar} position='relative'>\n          <Toolbar className={style.toolbar}>\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/JSun14\">\n              <GitHubIcon fontSize=\"large\" />\n            </IconButton>\n            <img src={logo} className={style.logo} alt=\"Logo\" />\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://www.linkedin.com/in/jerry-sun-50b660182/\">\n              <LinkedInIcon fontSize=\"large\" />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <main>\n          <Grid container>\n            <Grid item xs={5} >\n              <Card elevation={0} square={true} >\n                <CardContent className={style.intro}>\n                  <Typography variant=\"h4\" className={style.whitetext}>\n                    <b>Hi I'm Jerry. Welcome to my website. It's currently under developement.</b>\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item className={style.explanations} xs={7}>\n              <img src={doge} className={style.cover} />\n            </Grid>\n          </Grid>\n          <Grid container>\n            {projects.map((post) => (\n              <Project post={post} />\n            ))}\n          </Grid>\n        </main>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}